{"version":3,"file":"static/js/199.adcc013d.chunk.js","mappings":"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","sources":["components/Alert/Alert.jsx","webpack://react-homework-template/./src/components/BasicButtons/BasicButtons.module.css?327b","components/BasicButtons/BasicButtons.jsx","webpack://react-homework-template/./src/pages/Register/Register.module.css?12fc","pages/Register/Register.jsx","../node_modules/@mui/icons-material/AlternateEmail.js","../node_modules/@mui/icons-material/Lock.js","../node_modules/@mui/icons-material/Person.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2"],"sourcesContent":["import PropTypes from 'prop-types';\nconst { Snackbar, Alert } = require('@mui/material');\n\nconst AlertContacts = ({\n  success,\n  error,\n  handleClose,\n  successText = 'Add contact success.',\n  errorText = 'Such contact already exists.',\n}) => {\n  return (\n    <>\n      <Snackbar\n        anchorOrigin={{ horizontal: 'right', vertical: 'top' }}\n        onClose={handleClose}\n        open={error}\n        autoHideDuration={3000}\n      >\n        <Alert onClose={handleClose} severity=\"error\">\n          {errorText}\n        </Alert>\n      </Snackbar>\n\n      <Snackbar\n        anchorOrigin={{ horizontal: 'right', vertical: 'top' }}\n        onClose={handleClose}\n        open={success}\n        autoHideDuration={3000}\n      >\n        <Alert onClose={handleClose} severity=\"success\">\n          {successText}\n        </Alert>\n      </Snackbar>\n    </>\n  );\n};\n\nAlertContacts.propTypes = {\n  success: PropTypes.bool,\n  error: PropTypes.bool,\n  handleClose: PropTypes.func,\n  successText: PropTypes.string,\n  errorText: PropTypes.string,\n};\n\nexport default AlertContacts;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"BasicButtons_wrapper__Wl39O\",\"btn\":\"BasicButtons_btn__6ZBvr\"};","import * as React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '@mui/material/Button';\nimport css from './BasicButtons.module.css';\n\nexport default function BasicButtons({ disabled, text }) {\n  return (\n    <div className={css.wrapper}>\n      <Button disabled={disabled} className={css.btn} type=\"submit\">\n        {text}\n      </Button>\n    </div>\n  );\n}\n\nBasicButtons.propTypes = {\n  disabled: PropTypes.bool,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"register\":\"Register_register__H6uKZ\"};","import Box from '@mui/material/Box';\nimport { createPortal } from 'react-dom';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { string, object } from 'yup';\nimport TextField from '@mui/material/TextField';\nimport PersonIcon from '@mui/icons-material/Person';\nimport BasicButtons from 'components/BasicButtons/BasicButtons';\nimport css from '../../components/ContactForm/ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport cssRegister from './Register.module.css';\nimport AlertContacts from 'components/Alert/Alert';\nimport { useState } from 'react';\nimport { registerUserThunk } from 'redux/operations';\nimport AlternateEmailIcon from '@mui/icons-material/AlternateEmail';\nimport LockIcon from '@mui/icons-material/Lock';\nimport { selectAuthentificated, selectUserLoading } from 'redux/authSlice';\nimport { Navigate } from 'react-router-dom';\n\nconst alertPortal = document.getElementById('alert');\n\nconst schema = object({\n  name: string()\n    .max(20, 'Too Long! Max 20')\n    .required('Required*')\n    .matches(\n      /^[a-zA-Zа-яА-ЯґҐєЄіІїЇ]+(([' \\\\-][a-zA-Zа-яА-ЯґҐєЄіІїЇ ])?[a-zA-Zа-яА-ЯґҐєЄіІїЇ]*)*$/,\n      'Invalid name format'\n    ),\n  email: string()\n    .required('Required*')\n    .email('Invalid email format')\n    .max(30, 'Too Long! Max 30'),\n  password: string()\n    .required('Required*')\n    .min(8, 'Password must be at least 8 characters long')\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]*$/,\n      'Password must contain at least one uppercase letter, one lowercase letter, and one digit'\n    ),\n});\n\nexport default function Register() {\n  const buttonIsDisable = useSelector(selectUserLoading);\n  const authenticated = useSelector(selectAuthentificated);\n\n  const [alertSuccess, setAlertSuccess] = useState(false);\n  const [alertError, setAlertError] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleClose = () => {\n    setAlertSuccess(false);\n    setAlertError(false);\n  };\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n  const onSubmit = async data => {\n    const { type } = await dispatch(registerUserThunk(data));\n    reset();\n    if (type === 'auth/register/rejected') {\n      setAlertError(true);\n    }\n    if (type === 'auth/register/fulfilled') {\n      setAlertSuccess(true);\n    }\n  };\n\n  if (authenticated) return <Navigate to=\"/contacts\" />;\n  return (\n    <section className={cssRegister.register}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <Box\n          className={css.wrapper}\n          sx={{\n            '& > :not(style)': { m: 1 },\n            '& .MuiFormHelperText-root': {\n              color: 'red',\n              fontSize: 10,\n            },\n          }}\n        >\n          <Box className={css.box}>\n            <PersonIcon className={css.icon} />\n\n            <TextField\n              {...register('name')}\n              helperText={errors.name?.message}\n              type=\"text\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              label=\"Name\"\n              variant=\"standard\"\n              autoComplete=\"none\"\n            />\n          </Box>\n          <Box className={css.box}>\n            <AlternateEmailIcon className={css.icon} />\n            <TextField\n              {...register('email')}\n              helperText={errors.email?.message}\n              type=\"email\"\n              label=\"Email\"\n              title=\"Email should be in the format example@example.com\"\n              variant=\"standard\"\n              autoComplete=\"none\"\n            />\n          </Box>\n          <Box className={css.box}>\n            <LockIcon className={css.icon} />\n            <TextField\n              {...register('password')}\n              helperText={errors.password?.message}\n              type=\"password\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              label=\"Password\"\n              variant=\"standard\"\n              autoComplete=\"none\"\n            />\n          </Box>\n          <BasicButtons text=\"Sing up\" disabled={Boolean(buttonIsDisable)} />\n        </Box>\n      </form>\n\n      {createPortal(\n        <AlertContacts\n          success={alertSuccess}\n          successText={'New user successfully'}\n          errorText={'Such user already exists'}\n          error={alertError}\n          handleClose={handleClose}\n        />,\n        alertPortal\n      )}\n    </section>\n  );\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10h5v-2h-5c-4.34 0-8-3.66-8-8s3.66-8 8-8 8 3.66 8 8v1.43c0 .79-.71 1.57-1.5 1.57s-1.5-.78-1.5-1.57V12c0-2.76-2.24-5-5-5s-5 2.24-5 5 2.24 5 5 5c1.38 0 2.64-.56 3.54-1.47.65.89 1.77 1.47 2.96 1.47 1.97 0 3.5-1.6 3.5-3.57V12c0-5.52-4.48-10-10-10zm0 13c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3z\"\n}), 'AlternateEmail');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z\"\n}), 'Lock');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');\nexports.default = _default;","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"ContactForm_wrapper__-Umw-\",\"box\":\"ContactForm_box__4-sSd\",\"icon\":\"ContactForm_icon__wGMYw\"};"],"names":["_require","require","Snackbar","Alert","_ref","success","error","handleClose","_ref$successText","successText","_ref$errorText","errorText","_jsxs","_Fragment","children","_jsx","anchorOrigin","horizontal","vertical","onClose","open","autoHideDuration","severity","BasicButtons","disabled","text","className","css","Button","type","alertPortal","document","getElementById","schema","object","name","string","max","required","matches","email","password","min","Register","_errors$name","_errors$email","_errors$password","buttonIsDisable","useSelector","selectUserLoading","authenticated","selectAuthentificated","_useState","useState","_useState2","_slicedToArray","alertSuccess","setAlertSuccess","_useState3","_useState4","alertError","setAlertError","dispatch","useDispatch","_useForm","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","reset","onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","_yield$dispatch","wrap","_context","prev","next","registerUserThunk","sent","stop","_x","apply","arguments","Navigate","to","cssRegister","Box","sx","m","color","fontSize","PersonIcon","TextField","_objectSpread","helperText","message","title","label","variant","autoComplete","AlternateEmailIcon","LockIcon","Boolean","createPortal","AlertContacts","_interopRequireDefault","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}